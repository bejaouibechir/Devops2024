pipeline {
    agent { label 'your_target_hosts' }
    environment {
        DOCKER_COMPOSE_VERSION = "1.29.2"
        APP_NAME = "your_application"
        APP_IMAGE = "your_application_image:latest"
        APP_PORT = "8080"
    }
    stages {
        stage('Install Docker') {
            steps {
                sh 'apt-get update && apt-get install -y docker.io'
            }
        }
        stage('Install Docker Compose') {
            steps {
                sh '''
                    curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                    chmod +x /usr/local/bin/docker-compose
                '''
            }
        }
        stage('Ensure Docker service is running') {
            steps {
                sh '''
                    systemctl start docker
                    systemctl enable docker
                '''
            }
        }
        stage('Pull Docker image') {
            steps {
                sh "docker pull ${APP_IMAGE}"
            }
        }
        stage('Deploy Docker containers') {
            steps {
                dir('/path/to/your/docker-compose-directory') {
                    sh 'docker-compose up -d'
                }
            }
        }
    }
}
