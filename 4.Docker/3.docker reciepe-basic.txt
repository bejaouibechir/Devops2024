
https://docs.docker.com/engine/reference/commandline/exec/

-----------------Installation-------------------------

#install docker 
sudo apt update
sudo apt install docker.io

#start docker
sudo systemctl start docker
sudo systemctl enable docker

#add current user to the docker group 
groups ubuntu 
sudo usermod -aG docker ubuntu


----------------Images---------------------------------
#search for images
sudo docker search sqlserver
sudo docker search httpd
sudo docker search phpmyadmin


#docker help command 
docker image --help 

#download pull an image the latest version
docker pull httpd 

#download pull an image a particular version
docker pull httpd:2

#list images 
sudo docker images

#delete image 
sudo docker image rm httpd:2

#delete not working images
docker image prune -a

#delete all images 
docker rmi $(docker image ls -q)

#force delete a particular image 
docker rm - f image identifier

#Delete image 
docker rm identifier

#delete all the images
docker rmi $(docker image ls -q)

--------------------Containers-------------------------------------------

#List executing containers 
docker ps 

#List all containers 
docker ps -a


#Create a container from image
docker run -itd --name hello_devops httpd:alpine

#Start a container
docker start| restart 
# Options for starting
-t : (Terminal) docker terminal ;
-i : (interactive) ;
-d : ( detached mode : background mode ) ;

#Stop a container 
docker stop 

#execute a container 
docker exec -ti container_name command 
docker exec -ti m1 bash


#remove notworking container 
docker container prune


#Show logs 
docker logs --tail=20 aac2e2e63ff7 # display the last 20 lignes
docker logs -f aac2e2e63ff7 # all logs

#Show all info 
docker inspect #identifier

#Execute a container
docker exec -tdi <container_name_here> 

#delete all the containers 
docker rm -f $(docker ps -a -q)

#create a container and map ti to a port 

docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<your_password>' -p 1433:1433 --name sql_server_instance -d 
mcr.microsoft.com/mssql/server:2019-latest

docker exec -it sql_server_instance /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P <your_password>


--------------------------------Network-----------------------------------------------------
#install ping utility to test
apt-get update -y
apt-get install -y iputils-ping 

#install ip utility to know the ip 
apt install iproute2 -y

#Display docker network 
docker network ls

#Inspect docker network bridge
docker network inspect bridge

#create a new network 
docker network create --driver bridge vlan1

#create a new network with a subnet and gateway
docker network create vlan2 --subnet=192.168.10.0/24 --gateway=192.168.10.1

#create a container with already given network
docker run -d --name --network -p -v image name

#connect a created and runed container to a network 
docker network connect vlan1 srv1  

#disconnect a created and runed container to a network 
docker network disconnect vlan1 srv1  

#delete a network
docker network rm vlan1

#delete unused networks
docker network prune -f|--force # to force

-------------------------Docker volume--------------------------------------------------

#Create a volume 
docker volume create --name data
#List volumes 
docker volume list



